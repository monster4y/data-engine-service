<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.data.engine.dao.SearchExecuteMapper">
  <resultMap id="BaseResultMap" type="cn.com.data.engine.entity.SearchExecute">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="defineid" jdbcType="INTEGER" property="defineid" />
    <result column="dsid" jdbcType="INTEGER" property="dsid" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, url, defineid, dsid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from search_execute
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from search_execute
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.com.data.engine.entity.SearchExecute">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into search_execute (id, name, url, 
      defineid, dsid)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{defineid,jdbcType=INTEGER}, #{dsid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective"  useGeneratedKeys="true" keyColumn="id" keyProperty="id" parameterType="cn.com.data.engine.entity.SearchExecute">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into search_execute
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="defineid != null">
        defineid,
      </if>
      <if test="dsid != null">
        dsid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="defineid != null">
        #{defineid,jdbcType=INTEGER},
      </if>
      <if test="dsid != null">
        #{dsid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.data.engine.entity.SearchExecute">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update search_execute
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="defineid != null">
        defineid = #{defineid,jdbcType=INTEGER},
      </if>
      <if test="dsid != null">
        dsid = #{dsid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.data.engine.entity.SearchExecute">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update search_execute
    set name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      defineid = #{defineid,jdbcType=INTEGER},
      dsid = #{dsid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="fetchExecuteList" resultType="Map">
	select
	id,name,url,defineid,dsid
	from search_execute
	</select>
	
	<select id="fetchExecuteByUrl" resultType="Map">
	select
	url,defineid,d.sqlcontent as sqlcontent,d.params as params,d.dsid as dsid
	from search_execute as e inner join search_define as d
	on e.defineid=d.id
	where url = #{path,jdbcType=VARCHAR}
	</select>
</mapper>